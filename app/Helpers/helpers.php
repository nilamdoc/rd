<?php

use Illuminate\Http\Request;
use Carbon\Carbon;

if (!function_exists('getCountryCodeWithPhoneCodes')) {
    function getCountryCodeWithPhoneCodes()
    {
        return [
            '+93' => 'AF (+93)',
            '+355' => 'AL (+355)',
            '+213' => 'DZ (+213)',
            '+376' => 'AD (+376)',
            '+244' => 'AO (+244)',
            '+1-268' => 'AG (+1-268)',
            '+54' => 'AR (+54)',
            '+374' => 'AM (+374)',
            '+61' => 'AU (+61)',
            '+43' => 'AT (+43)',
            '+1-242' => 'BS (+1-242)',
            '+973' => 'BH (+973)',
            '+880' => 'BD (+880)',
            '+1-246' => 'BB (+1-246)',
            '+375' => 'BY (+375)',
            '+32' => 'BE (+32)',
            '+501' => 'BZ (+501)',
            '+229' => 'BJ (+229)',
            '+975' => 'BT (+975)',
            '+591' => 'BO (+591)',
            '+387' => 'BA (+387)',
            '+267' => 'BW (+267)',
            '+55' => 'BR (+55)',
            '+673' => 'BN (+673)',
            '+359' => 'BG (+359)',
            '+226' => 'BF (+226)',
            '+257' => 'BI (+257)',
            '+238' => 'CV (+238)',
            '+855' => 'KH (+855)',
            '+237' => 'CM (+237)',
            '+1' => 'CA (+1)',
            '+236' => 'CF (+236)',
            '+235' => 'TD (+235)',
            '+56' => 'CL (+56)',
            '+86' => 'CN (+86)',
            '+57' => 'CO (+57)',
            '+269' => 'KM (+269)',
            '+243' => 'CD (+243)',
            '+242' => 'CG (+242)',
            '+506' => 'CR (+506)',
            '+385' => 'HR (+385)',
            '+53' => 'CU (+53)',
            '+357' => 'CY (+357)',
            '+420' => 'CZ (+420)',
            '+45' => 'DK (+45)',
            '+253' => 'DJ (+253)',
            '+1-767' => 'DM (+1-767)',
            '+1-809' => 'DO (+1-809)',
            '+670' => 'TL (+670)',
            '+593' => 'EC (+593)',
            '+20' => 'EG (+20)',
            '+503' => 'SV (+503)',
            '+240' => 'GQ (+240)',
            '+291' => 'ER (+291)',
            '+372' => 'EE (+372)',
            '+268' => 'SZ (+268)',
            '+251' => 'ET (+251)',
            '+679' => 'FJ (+679)',
            '+358' => 'FI (+358)',
            '+33' => 'FR (+33)',
            '+241' => 'GA (+241)',
            '+220' => 'GM (+220)',
            '+995' => 'GE (+995)',
            '+49' => 'DE (+49)',
            '+233' => 'GH (+233)',
            '+30' => 'GR (+30)',
            '+1-473' => 'GD (+1-473)',
            '+502' => 'GT (+502)',
            '+224' => 'GN (+224)',
            '+245' => 'GW (+245)',
            '+592' => 'GY (+592)',
            '+509' => 'HT (+509)',
            '+504' => 'HN (+504)',
            '+36' => 'HU (+36)',
            '+354' => 'IS (+354)',
            '+91' => 'IN (+91)',
            '+62' => 'ID (+62)',
            '+98' => 'IR (+98)',
            '+964' => 'IQ (+964)',
            '+353' => 'IE (+353)',
            '+972' => 'IL (+972)',
            '+39' => 'IT (+39)',
            '+225' => 'CI (+225)',
            '+1-876' => 'JM (+1-876)',
            '+81' => 'JP (+81)',
            '+962' => 'JO (+962)',
            '+7' => 'KZ (+7)',
            '+254' => 'KE (+254)',
            '+686' => 'KI (+686)',
            '+850' => 'KP (+850)',
            '+82' => 'KR (+82)',
            '+965' => 'KW (+965)',
            '+996' => 'KG (+996)',
            '+856' => 'LA (+856)',
            '+371' => 'LV (+371)',
            '+961' => 'LB (+961)',
            '+266' => 'LS (+266)',
            '+231' => 'LR (+231)',
            '+218' => 'LY (+218)',
            '+423' => 'LI (+423)',
            '+370' => 'LT (+370)',
            '+352' => 'LU (+352)',
            '+261' => 'MG (+261)',
            '+265' => 'MW (+265)',
            '+60' => 'MY (+60)',
            '+960' => 'MV (+960)',
            '+223' => 'ML (+223)',
            '+356' => 'MT (+356)',
            '+692' => 'MH (+692)',
            '+222' => 'MR (+222)',
            '+230' => 'MU (+230)',
            '+52' => 'MX (+52)',
            '+691' => 'FM (+691)',
            '+373' => 'MD (+373)',
            '+377' => 'MC (+377)',
            '+976' => 'MN (+976)',
            '+382' => 'ME (+382)',
            '+212' => 'MA (+212)',
            '+258' => 'MZ (+258)',
            '+95' => 'MM (+95)',
            '+264' => 'NA (+264)',
            '+674' => 'NR (+674)',
            '+977' => 'NP (+977)',
            '+31' => 'NL (+31)',
            '+64' => 'NZ (+64)',
            '+505' => 'NI (+505)',
            '+227' => 'NE (+227)',
            '+234' => 'NG (+234)',
            '+389' => 'MK (+389)',
            '+47' => 'NO (+47)',
            '+968' => 'OM (+968)',
            '+92' => 'PK (+92)',
            '+680' => 'PW (+680)',
            '+507' => 'PA (+507)',
            '+675' => 'PG (+675)',
            '+595' => 'PY (+595)',
            '+51' => 'PE (+51)',
            '+63' => 'PH (+63)',
            '+48' => 'PL (+48)',
            '+351' => 'PT (+351)',
            '+974' => 'QA (+974)',
            '+40' => 'RO (+40)',
            '+7' => 'RU (+7)',
            '+250' => 'RW (+250)',
            '+1-869' => 'KN (+1-869)',
            '+1-758' => 'LC (+1-758)',
            '+1-784' => 'VC (+1-784)',
            '+685' => 'WS (+685)',
            '+378' => 'SM (+378)',
            '+239' => 'ST (+239)',
            '+966' => 'SA (+966)',
            '+221' => 'SN (+221)',
            '+381' => 'RS (+381)',
            '+248' => 'SC (+248)',
            '+232' => 'SL (+232)',
            '+65' => 'SG (+65)',
            '+421' => 'SK (+421)',
            '+386' => 'SI (+386)',
            '+677' => 'SB (+677)',
            '+252' => 'SO (+252)',
            '+27' => 'ZA (+27)',
            '+211' => 'SS (+211)',
            '+34' => 'ES (+34)',
            '+94' => 'LK (+94)',
            '+249' => 'SD (+249)',
            '+597' => 'SR (+597)',
            '+46' => 'SE (+46)',
            '+41' => 'CH (+41)',
            '+963' => 'SY (+963)',
            '+886' => 'TW (+886)',
            '+992' => 'TJ (+992)',
            '+255' => 'TZ (+255)',
            '+66' => 'TH (+66)',
            '+228' => 'TG (+228)',
            '+676' => 'TO (+676)',
            '+1-868' => 'TT (+1-868)',
            '+216' => 'TN (+216)',
            '+90' => 'TR (+90)',
            '+993' => 'TM (+993)',
            '+688' => 'TV (+688)',
            '+256' => 'UG (+256)',
            '+380' => 'UA (+380)',
            '+971' => 'AE (+971)',
            '+44' => 'GB (+44)',
            '+1' => 'US (+1)',
            '+598' => 'UY (+598)',
            '+998' => 'UZ (+998)',
            '+678' => 'VU (+678)',
            '+379' => 'VA (+379)',
            '+58' => 'VE (+58)',
            '+84' => 'VN (+84)',
            '+967' => 'YE (+967)',
            '+260' => 'ZM (+260)',
            '+263' => 'ZW (+263)',
        ];
    }
}

if (!function_exists('pre')) {
    /**
     * Get formatted timestamp for creation and update.
     *
     * @return string
     */
    function pre($request)
    {
        echo '<pre>';
        print_r($request);
        exit;
    }
}

if (!function_exists('getUserLocationDetails')) {
    /**
     * Get formatted timestamp for creation and update.
     *
     * @return string
     */
    function getUserLocationDetails($request,$userId)
    {
        $ipAddress = $request->ip();
        try 
        {
            $url = "http://ip-api.com/json";
            $locationData = json_decode(file_get_contents($url), true);
            if ($locationData && $locationData['status'] === 'success') {
                return [
                    'country'       => $locationData['country'],
                    'region'        => $locationData['regionName'],
                    'city'          => $locationData['city'],
                    'zip'           => $locationData['zip'],
                    'lat'           => $locationData['lat'],
                    'lon'           => $locationData['lon'],
                    'ip'            => $locationData['query'],
                    'userId'        => $userId, 
                    'created_at'    => Carbon::now(),
                    'updated_at'    => Carbon::now(),
                ];
            }
        } catch (\Exception $e) {
            // Handle error if geolocation fails
            return null;
        }

        return null;
    }
}